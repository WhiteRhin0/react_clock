{"version":3,"sources":["components/Clock/Clock.jsx","App.js","index.js"],"names":["Clock","state","date","Date","this","time","setInterval","setState","console","log","toLocaleTimeString","clearInterval","key","props","name","React","Component","defaultProps","App","isClockVisible","clockName","Math","random","clockNewName","genereteRandomName","showClock","hideClock","className","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"uMAGaA,EAAb,4MACEC,MAAQ,CACNC,KAAM,IAAIC,MAFd,kEAKuB,IAAD,OAClBC,KAAKC,KAAOC,aAAY,WACtB,EAAKC,SAAS,CAAEL,KAAM,IAAIC,OAE1BK,QAAQC,IAAI,EAAKR,MAAMC,KAAKQ,wBAC3B,OAVP,6CAcIC,cAAcP,KAAKC,QAdvB,+BAiBY,IACAH,EAASE,KAAKH,MAAdC,KAER,OACE,0BAAMU,IAAKR,KAAKS,MAAMC,MAAOZ,EAAKQ,0BArBxC,GAA2BK,IAAMC,WA6BjChB,EAAMiB,aAAe,CACnBH,KAAM,I,UC7BKI,EAAb,4MACEjB,MAAQ,CACNkB,gBAAgB,EAChBC,UAAWC,KAAKC,SAChBC,aAAcF,KAAKC,UAJvB,EAOEE,mBAAqB,WACnB,EAAKjB,SAAS,CAAEgB,aAAcF,KAAKC,WAEnC,EAAKf,SAAS,CAAEa,UAAW,EAAKnB,MAAMsB,eAElC,EAAKtB,MAAMkB,gBAEbX,QAAQC,IAAR,qCACgC,EAAKR,MAAMmB,UAD3C,yBAEI,EAAKnB,MAAMsB,gBAhBrB,EAqBEE,UAAY,WACV,EAAKlB,SAAS,CAAEY,gBAAgB,KAtBpC,EAyBEO,UAAY,WACV,EAAKnB,SAAS,CAAEY,gBAAgB,KA1BpC,uDA8BI,OACE,yBAAKQ,UAAU,OACb,2CAEEvB,KAAKH,MAAMkB,eAET,4BAAQS,KAAK,SAASC,QAASzB,KAAKsB,WAApC,cAIA,4BAAQE,KAAK,SAASC,QAASzB,KAAKqB,WAApC,cAMJ,4BAAQG,KAAK,SAASC,QAASzB,KAAKoB,oBAApC,eAIA,2CAEG,IACApB,KAAKH,MAAMkB,gBACV,kBAAC,EAAD,CAAOL,KAAMV,KAAKH,MAAMmB,kBAtDpC,GAAyBL,IAAMC,WCA/Bc,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.d8f1745b.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport class Clock extends React.Component {\n  state = {\n    date: new Date(),\n  }\n\n  componentDidMount() {\n    this.time = setInterval(() => {\n      this.setState({ date: new Date() });\n      // eslint-disable-next-line no-console\n      console.log(this.state.date.toLocaleTimeString());\n    }, 1000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.time);\n  }\n\n  render() {\n    const { date } = this.state;\n\n    return (\n      <span key={this.props.name}>{date.toLocaleTimeString()}</span>\n    );\n  }\n}\n\nClock.propTypes = {\n  name: PropTypes.number,\n};\nClock.defaultProps = {\n  name: '',\n};\n","import React from 'react';\nimport { Clock } from './components/Clock';\nimport './App.scss';\n\nexport class App extends React.Component {\n  state = {\n    isClockVisible: true,\n    clockName: Math.random(),\n    clockNewName: Math.random(),\n  }\n\n  genereteRandomName = () => {\n    this.setState({ clockNewName: Math.random() });\n    // eslint-disable-next-line react/no-access-state-in-setstate\n    this.setState({ clockName: this.state.clockNewName });\n\n    if (this.state.isClockVisible) {\n      // eslint-disable-next-line no-console\n      console.log(\n        `The Clock was renamed from ${this.state.clockName} to \n        ${this.state.clockNewName}`,\n      );\n    }\n  }\n\n  showClock = () => {\n    this.setState({ isClockVisible: true });\n  }\n\n  hideClock = () => {\n    this.setState({ isClockVisible: false });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n\n        { this.state.isClockVisible\n          ? (\n            <button type=\"button\" onClick={this.hideClock}>\n              Hide Clock\n            </button>\n          ) : (\n            <button type=\"button\" onClick={this.showClock}>\n              Show Clock\n            </button>\n          )\n        }\n\n        <button type=\"button\" onClick={this.genereteRandomName}>\n          Random name\n        </button>\n\n        <p>\n          Current time:\n          {' '}\n          {this.state.isClockVisible && (\n            <Clock name={this.state.clockName} />\n          )}\n        </p>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}